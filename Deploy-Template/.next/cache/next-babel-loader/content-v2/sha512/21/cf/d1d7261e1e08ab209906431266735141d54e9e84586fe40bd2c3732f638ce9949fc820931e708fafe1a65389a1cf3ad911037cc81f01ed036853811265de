{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dercio/AppWorld/appworld-templates/Deploy-Template/state/ShowsContext.js\";\nimport { createContext, useState, useEffect } from \"react\";\nexport const ShowsContext = /*#__PURE__*/createContext([]);\nexport const ShowsProvider = ({\n  children\n}) => {\n  const {\n    0: shows,\n    1: setShows\n  } = useState({\n    allShows: [],\n    talkShows: [],\n    afternoonShows: [],\n    eveningShows: [],\n    morningShows: [],\n    musicShows: []\n  });\n  useEffect(() => {\n    fetch('./shows.json').then(res => res.json()).then(data => {\n      const talkShows = data.filter(show => show.category == \"afternoon-shows\");\n      const afternoonShows = data.filter(show => show.category == \"talk-shows\");\n      const eveningShows = data.filter(show => show.category == \"evening-shows\");\n      const morningShows = data.filter(show => show.category == \"morning-shows\");\n      const musicShows = data.filter(show => show.category == \"music-shows\");\n      setShows({\n        allShows: data,\n        talkShows,\n        afternoonShows,\n        eveningShows,\n        morningShows,\n        musicShows\n      });\n    }).catch(err => console.log(err.message));\n  }, []);\n  const payload = {\n    shows,\n    setShows\n  };\n  return /*#__PURE__*/_jsxDEV(ShowsContext.Provider, {\n    value: payload,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\nexport default ShowsProvider;","map":{"version":3,"sources":["/home/dercio/AppWorld/appworld-templates/Deploy-Template/state/ShowsContext.js"],"names":["createContext","useState","useEffect","ShowsContext","ShowsProvider","children","shows","setShows","allShows","talkShows","afternoonShows","eveningShows","morningShows","musicShows","fetch","then","res","json","data","filter","show","category","catch","err","console","log","message","payload"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,OAAO,MAAMC,YAAY,gBAAGH,aAAa,CAAC,EAAD,CAAlC;AAEP,OAAO,MAAMI,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACzC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC;AAC/BO,IAAAA,QAAQ,EAAG,EADoB;AAE/BC,IAAAA,SAAS,EAAG,EAFmB;AAG/BC,IAAAA,cAAc,EAAG,EAHc;AAI/BC,IAAAA,YAAY,EAAG,EAJgB;AAK/BC,IAAAA,YAAY,EAAG,EALgB;AAM/BC,IAAAA,UAAU,EAAG;AANkB,GAAD,CAAlC;AASAX,EAAAA,SAAS,CAAC,MAAI;AACTY,IAAAA,KAAK,CAAC,cAAD,CAAL,CACCC,IADD,CACQC,GAAF,IAAWA,GAAG,CAACC,IAAJ,EADjB,EAECF,IAFD,CAEQG,IAAF,IAAY;AACV,YAAMT,SAAS,GAAGS,IAAI,CAACC,MAAL,CAAaC,IAAD,IAASA,IAAI,CAACC,QAAL,IAAiB,iBAAtC,CAAlB;AACA,YAAMX,cAAc,GAAGQ,IAAI,CAACC,MAAL,CAAaC,IAAD,IAASA,IAAI,CAACC,QAAL,IAAiB,YAAtC,CAAvB;AACA,YAAMV,YAAY,GAAGO,IAAI,CAACC,MAAL,CAAaC,IAAD,IAASA,IAAI,CAACC,QAAL,IAAiB,eAAtC,CAArB;AACA,YAAMT,YAAY,GAAGM,IAAI,CAACC,MAAL,CAAaC,IAAD,IAASA,IAAI,CAACC,QAAL,IAAiB,eAAtC,CAArB;AACA,YAAMR,UAAU,GAAGK,IAAI,CAACC,MAAL,CAAaC,IAAD,IAASA,IAAI,CAACC,QAAL,IAAiB,aAAtC,CAAnB;AAEAd,MAAAA,QAAQ,CAAC;AACLC,QAAAA,QAAQ,EAAGU,IADN;AAELT,QAAAA,SAFK;AAGLC,QAAAA,cAHK;AAILC,QAAAA,YAJK;AAKLC,QAAAA,YALK;AAMLC,QAAAA;AANK,OAAD,CAAR;AASA,KAlBR,EAmBCS,KAnBD,CAmBSC,GAAF,IAAUC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CAnBjB;AAoBJ,GArBQ,EAqBP,EArBO,CAAT;AAuBA,QAAMC,OAAO,GAAG;AACZrB,IAAAA,KADY;AAEZC,IAAAA;AAFY,GAAhB;AAKA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEoB,OAA9B;AAAA,cACQtB;AADR;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA3CM;AA6CP,eAAeD,aAAf","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\n\nexport const ShowsContext = createContext([])\n\nexport const ShowsProvider = ({children}) => {\n    const [shows, setShows] = useState({\n        allShows : [],\n        talkShows : [],\n        afternoonShows : [],\n        eveningShows : [],\n        morningShows : [],\n        musicShows : []\n    });\n\n    useEffect(()=>{\n         fetch('./shows.json')\n         .then(( res ) => res.json())\n         .then(( data ) => {\n                 const talkShows = data.filter((show)=> show.category == \"afternoon-shows\");\n                 const afternoonShows = data.filter((show)=> show.category == \"talk-shows\")\n                 const eveningShows = data.filter((show)=> show.category == \"evening-shows\")\n                 const morningShows = data.filter((show)=> show.category == \"morning-shows\")\n                 const musicShows = data.filter((show)=> show.category == \"music-shows\")\n                 \n                 setShows({\n                     allShows : data,\n                     talkShows,\n                     afternoonShows,\n                     eveningShows,\n                     morningShows,\n                     musicShows\n                 }) \n                 \n                })\n         .catch(( err )=> console.log(err.message))\n    },[])\n\n    const payload = {\n        shows,\n        setShows\n    }\n\n    return (\n        <ShowsContext.Provider value={payload}>\n               {children}\n        </ShowsContext.Provider>\n    )\n}\n\nexport default ShowsProvider\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}